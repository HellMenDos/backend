{"version":3,"file":"static/js/223.d2805e48.chunk.js","mappings":"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","sources":["components/Input.tsx","data.ts","components/MyQuestion.tsx","components/Popup.tsx","pages/profile.tsx"],"sourcesContent":["import * as React from 'react';\nimport InputUnstyled from '@mui/base/InputUnstyled';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nimport { styled } from '@mui/system';\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#b6daff',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n};\n\nconst grey = {\n  50: '#f6f8fa',\n  100: '#eaeef2',\n  200: '#d0d7de',\n  300: '#afb8c1',\n  400: '#8c959f',\n  500: '#6e7781',\n  600: '#57606a',\n  700: '#424a53',\n  800: '#32383f',\n  900: '#24292f',\n};\n\nconst StyledInputElement = styled('input')(\n  ({ theme }) => `\n  width: 100%;\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 12px;\n  border-radius: 12px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 4px 30px ${theme.palette.mode === 'dark' ? grey[900] : grey[200]};\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    outline: 3px solid ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n`,\n);\n\nconst StyledTextAreaElement = styled('textarea')(\n  ({ theme }) => `\n  width: 100%;\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 12px;\n  border-radius: 12px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 4px 30px ${theme.palette.mode === 'dark' ? grey[900] : grey[200]};\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    outline: 3px solid ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n`,\n);\n\nexport const Input = React.forwardRef(function CustomInput(\n  props: React.InputHTMLAttributes<HTMLInputElement>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  return (\n    <InputUnstyled components={{ Input: StyledInputElement }} {...props} ref={ref} />\n  );\n});\n\nexport const TextArea = function (props: any) {\n  return <StyledTextAreaElement {...props} />;\n};","export const sidebar = {\n    title: 'Что тут есть ?',\n    description: 'Тут ты можешь найти большое количество вопросов на совсем разные технологии. \\nТы можешь подготовиться к собеседованию и пройти импровезированное в боте собеседнике',\n    archives: [\n      { title: 'Бот IT собеседник', url: 'https://t.me/interviewITBot' },\n      { title: 'Джаваскриптезеры', url: 'https://t.me/jswrl' },\n      { title: 'Джаваскриптезеры YouTube', url: 'https://www.youtube.com/channel/UCPHIf4eGH-i5yox4MqI-fvw' },\n      { title: 'Питонисты', url: 'https://t.me/ptworl' },\n      { title: 'Связаться с нами', url: '/support' },\n    ],\n};\n\nexport const mainFeaturedPost = {\n  title: 'Ищи вопросы на собеседования быстро',\n  description: \"Не бойся проходить собеседования. Тут ты можешь найти все нужные вопросы на собеседования\",\n  image: '/code.jpeg',\n  imageText: 'main image description',\n  linkText: 'Наши ресурсы...',\n  linkURL: '/contact',\n\n};\n\nexport const placeholderImageUrl = 'https://www.vastas.com/wp-content/uploads/2019/12/placeholder.jpg'","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { Question } from '../common/types';\nimport { placeholderImageUrl } from '../data';\nimport { MAIN_DOMAIN, MAIN_DOMAIN_PHOTO } from '../services/api';\n\ninterface FeaturedQuestionProps {\n  question: Question;\n  md?: number\n}\n\nexport default function MyQuestion(props: FeaturedQuestionProps) {\n  const { question, md = 6 } = props;\n  const imageUrl = question?.photo ? `${MAIN_DOMAIN_PHOTO}/media/${question?.photo}` : placeholderImageUrl\n\n  return (\n    <Grid item xs={12} md={md} sx={{ mt: 1 }}>\n      <CardActionArea component=\"a\">\n        <Card sx={{ display: 'flex', borderRadius:'20px' }}>\n          <CardContent sx={{ flex: 1 }}>\n            <Typography component=\"h2\" variant=\"h5\" fontWeight=\"bold\">\n              {question.title}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"text.secondary\" fontSize={13}>\n              {`${question?.lang} ${question?.tech}`}\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph fontWeight=\"light\" fontSize={12}>\n              {question.describe}\n            </Typography>\n            <Typography variant=\"subtitle1\" paragraph fontWeight=\"light\" fontSize={10}>\n              Статус: {question.verify ? 'опубликован' : 'рассматривается'}\n            </Typography>\n          </CardContent>\n          <CardMedia\n            component=\"img\"\n            sx={{ width: 160 }}\n            image={imageUrl}\n          />\n        </Card>\n      </CardActionArea>\n    </Grid>\n  );\n}","import React, { useState } from 'react';\nimport { Alert, Box, Grid, Snackbar } from '@mui/material';\nimport { Input, TextArea } from './Input';\nimport { QuestionService } from '../services/QuestionService';\n\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';import { fetchMyQuestions } from '../store/slices/questionSlice';\nimport { useAppDispatch } from '../store/hooks';\n;\n\n\nexport interface CreateDialogProps {\n  open: boolean;\n  onClose: () => void;\n  setMessage: (value: string) => void\n  setSnackError: (value: boolean) => void\n  setSnackSuccess: (value: boolean) => void\n}\n \n\n\nfunction CreateDialog(props: CreateDialogProps) {\n  const [photoText, setPhotoText] = useState<string>('Выбрать фото')\n  const { onClose, open, setMessage, setSnackSuccess, setSnackError } = props;\n  const dispatch = useAppDispatch()\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const newQuestion = await QuestionService().create(data) as { data: any, error?: string }\n    \n    if(newQuestion.data) {\n      setMessage('Вопрос создан')\n      setSnackSuccess(true)\n      setSnackError(false)\n      dispatch(fetchMyQuestions())\n\n    }else {\n      setMessage('Произашла ошибка')\n      setSnackError(true)\n      setSnackSuccess(false)\n    }\n\n    onClose()\n  }\n\n  return (\n    <Dialog onClose={onClose} open={open}>\n        <DialogTitle fontWeight={'bold'}>Создай вопрос</DialogTitle>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <Grid container spacing={2} style={{ padding: '20px'}}>\n            <Grid item xs={12}>\n                <Input style={{ width:\"100%\" }} required placeholder='Название' name=\"title\" />\n            </Grid>\n            <Grid item xs={12}>\n                <TextArea style={{ width:\"100%\" }} required  placeholder='Описание' name='describe' />\n            </Grid>\n            <Grid item xs={12}>\n                <Input style={{ width:\"100%\" }} required placeholder='Название языка' name=\"lang\" />\n            </Grid>\n            <Grid item xs={12}>\n                <Input style={{ width:\"100%\" }} required placeholder='Название технологии' name=\"tech\" />\n            </Grid>\n            <Grid item xs={12}>\n                <label htmlFor=\"photo\" className=\"choocePhoto\">{photoText}</label>\n                <Input style={{ width:\"100%\",display:'none' }} onChange={() => setPhotoText('Фото выбрано')} type=\"file\" placeholder='Фото' name=\"photo\" id='photo'/>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ \n                borderRadius:'10px', \n                background:\"#0966aa\", \n                marginLeft:\"15px\",\n                marginTop:\"10px\" \n              }}\n            >\n              Отправить\n            </Button>\n          </Grid>\n        </Box>\n    </Dialog>\n  );\n}\n\nexport default function CreateDialogPop() {\n  const [open, setOpen] = useState(false);\n  const [ snackError, setSnackError ] = useState<boolean>(false)\n  const [ snackSuccess, setSnackSuccess ] = useState<boolean>(false)\n  const [ message, setMessage ] = useState<string>('')\n\n\n  const handleCloseSnack = (event: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackError(false);\n    setSnackSuccess(false);  \n  };\n\n  \n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button \n        variant=\"contained\"  \n        fullWidth \n        sx={{ mt: 3, mb: 2, borderRadius:'10px', background:\"#0966aa\" }}\n        onClick={handleClickOpen}>\n        Создать вопрос\n      </Button>\n      <CreateDialog\n        open={open}\n        onClose={handleClose}\n        setMessage={setMessage}\n        setSnackError={setSnackError}\n        setSnackSuccess={setSnackSuccess}\n      />\n        <Snackbar open={snackError} autoHideDuration={6000} onClose={handleCloseSnack}>\n          <Alert onClose={handleCloseSnack} severity=\"error\" sx={{ width: '100%' }}>\n            {message}\n          </Alert>\n        </Snackbar>\n        <Snackbar open={snackSuccess} autoHideDuration={6000} onClose={handleCloseSnack}>\n          <Alert onClose={handleCloseSnack} severity=\"success\" sx={{ width: '100%' }}>\n            {message}\n          </Alert>\n        </Snackbar>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Alert, Pagination, Snackbar } from '@mui/material';\n\nimport MyQuestion from '../components/MyQuestion';\nimport { Input } from '../components/Input';\nimport CreateDialogPop from '../components/Popup';\nimport { useAppSelector, useAppDispatch } from '../store/hooks';\nimport { User, Question } from '../common/types';\nimport { AuthService } from '../services/AuthService';\nimport { UserService } from '../services/UserService';\nimport { QuestionService } from '../services/QuestionService';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMyQuestions } from '../store/slices/questionSlice';\nimport DocumentMeta from 'react-document-meta';\n\nconst theme = createTheme();\n\nexport default function Profile() {\n  const user = useAppSelector((state) => state.user.user) as User\n  const questions = useAppSelector((state) => state.question.myquestions) as Question[]\n\n  const dispatch = useAppDispatch()\n  const [ snackError, setSnackError ] = useState<boolean>(false)\n  const [ snackSuccess, setSnackSuccess ] = useState<boolean>(false)\n  const [ message, setMessage ] = useState<string>('')\n\n  const [name,setName] = useState<string>('')\n  const [email,setEmail] = useState<string>('')\n  const [phone,setPhone] = useState<string>('')\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const TOTAL_POST_PER_PAGE = 10\n  const TOTAL_POSTS = TOTAL_POST_PER_PAGE * Number(searchParams.get('page'))\n  \n  useEffect(() => {\n    setName(user?.name)\n    setEmail(user?.email)\n    setPhone(user?.phone)\n    dispatch(fetchMyQuestions())\n  }, [user])\n\n  const setPage = (pageNumber: string) => {\n    setSearchParams({ 'page': String(Number(pageNumber) - 1) })\n  }\n\n  const meta = {\n    title: 'Профиль',\n    description: 'Отредактируй свои данные и создвй вопрос',\n    meta: {\n      charset: 'utf-8',\n      name: {\n        keywords: 'react,meta,document,html,tags'\n      }\n    }\n  };\n\n  const deleteQuestion = (id: number) => {\n    QuestionService().deleteMyQuestion(id).then(() => {\n      dispatch(fetchMyQuestions()) \n    })\n  }\n  const handleClose = (event: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackError(false);\n    setSnackSuccess(false);\n  };\n\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const updateUser = await UserService().update({\n      email: data.get('email') as string,\n      password: data.get('password') as string,\n      name: data.get('name') as string,\n      phone: data.get('phone') as string\n    }) as { data: any, error?: string };\n\n    if(updateUser.data) {\n      setMessage('Пользователь обновлен')\n      setSnackSuccess(true)\n    }else {\n      setMessage(updateUser?.error as string)\n      setSnackError(true)\n    }\n  };\n\n  const resetPassword = async () => {\n    const usData = await AuthService().forget({ email: user.email as string }) as { data: any, error?: string };\n    \n    if(usData.data) {\n      setMessage('Новый пароль отправлен на почту')\n      setSnackSuccess(true)\n    }else {\n      setMessage(usData?.error as string)\n      setSnackError(true)\n    }\n  }\n\n  return (\n    <DocumentMeta {...meta}>\n    <ThemeProvider theme={theme}>\n    <Grid container>\n        <Grid item xs={12} style={{ padding: '15px'}} md={6}>\n          <Typography component=\"h1\" variant=\"h5\" fontWeight=\"bold\" sx={{ mb: 1 }}>\n            Изменить данные\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Input style={{ width:\"100%\" }} \n                  required \n                  placeholder='E-mail' \n                  name='email' \n                  value={email} \n                  onChange={({ target }) => setEmail(target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Input \n                  style={{ width:\"100%\" }} \n                  required  \n                  placeholder='Имя' \n                  name='name' \n                  value={name}\n                  onChange={({ target }) => setName(target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Input \n                  style={{ width:\"100%\" }} \n                  required \n                  placeholder='Телефон' \n                  name='phone'\n                  value={phone}\n                  onChange={({ target }) => setPhone(target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Input style={{ width:\"100%\" }} required name=\"password\" type=\"password\"  placeholder='Пароль'/>\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, borderRadius:'10px', background:\"#0966aa\" }}\n            >\n              Отправить\n            </Button>\n          </Box>\n          <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              onClick={resetPassword}\n              sx={{ borderRadius:'10px', background:\"#0966aa\" }}\n            >\n              Восстановить пароль\n            </Button>\n          <Snackbar open={snackError} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n              {message}\n            </Alert>\n          </Snackbar>\n          <Snackbar open={snackSuccess} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\n              {message}\n            </Alert>\n          </Snackbar>\n        </Grid>\n\n        <Grid item xs={12} style={{ padding: '15px'}} md={6}>\n            <Typography component=\"h1\" variant=\"h5\" fontWeight=\"bold\">\n              Ваши посты\n            </Typography>\n            <CreateDialogPop />\n          {questions.slice(TOTAL_POSTS, TOTAL_POSTS + 10).map((question) => (\n            <div style={{ display: 'flex ', justifyContent: 'space-between', alignItems: 'center'}}>\n              <MyQuestion md={12} question={question} />\n              <img src='./delete.png' width={20} onClick={() => deleteQuestion(question.id)} style={{ marginLeft: '10px' }} />\n            </div>\n          ))}\n          <div style={{width: \"max-content\", margin: \"30px auto\"}}> \n            <Pagination \n              count={Math.ceil(questions.length/TOTAL_POST_PER_PAGE)} \n              page={Number(searchParams.get('page')) + 1} \n              variant=\"outlined\" \n              onChange={(e: any) => setPage(e.target.innerText)}\n              hidePrevButton \n              hideNextButton\n            />\n          </div> \n        </Grid>\n    </Grid>\n    </ThemeProvider>\n    </DocumentMeta>\n  );\n}"],"names":["blue","grey","StyledInputElement","styled","theme","palette","mode","StyledTextAreaElement","Input","React","props","ref","components","TextArea","sidebar","title","description","archives","url","mainFeaturedPost","image","imageText","linkText","linkURL","placeholderImageUrl","MyQuestion","question","md","imageUrl","photo","MAIN_DOMAIN_PHOTO","Grid","item","xs","sx","mt","CardActionArea","component","Card","display","borderRadius","CardContent","flex","Typography","variant","fontWeight","color","fontSize","lang","tech","paragraph","describe","verify","CardMedia","width","CreateDialog","useState","photoText","setPhotoText","onClose","open","setMessage","setSnackSuccess","setSnackError","dispatch","useAppDispatch","handleSubmit","event","preventDefault","data","FormData","currentTarget","QuestionService","create","fetchMyQuestions","Dialog","DialogTitle","Box","onSubmit","container","spacing","style","padding","I","required","placeholder","name","htmlFor","className","onChange","type","id","Button","fullWidth","background","marginLeft","marginTop","CreateDialogPop","setOpen","snackError","snackSuccess","message","handleCloseSnack","reason","mb","onClick","Snackbar","autoHideDuration","Alert","severity","createTheme","Profile","user","useAppSelector","state","questions","myquestions","setName","email","setEmail","phone","setPhone","useSearchParams","searchParams","setSearchParams","TOTAL_POSTS","Number","get","useEffect","handleClose","UserService","update","password","updateUser","error","resetPassword","AuthService","forget","usData","meta","charset","keywords","ThemeProvider","value","target","slice","map","justifyContent","alignItems","src","deleteMyQuestion","then","margin","Pagination","count","Math","ceil","length","page","e","pageNumber","innerText","String","hidePrevButton","hideNextButton"],"sourceRoot":""}