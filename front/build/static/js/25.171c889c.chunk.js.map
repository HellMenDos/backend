{"version":3,"file":"static/js/25.171c889c.chunk.js","mappings":"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","sources":["components/Input.tsx","components/Markdown.tsx","components/Main.tsx","components/Sidebar.tsx","data.ts","pages/questions.tsx"],"sourcesContent":["import * as React from 'react';\nimport InputUnstyled from '@mui/base/InputUnstyled';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nimport { styled } from '@mui/system';\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#b6daff',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n};\n\nconst grey = {\n  50: '#f6f8fa',\n  100: '#eaeef2',\n  200: '#d0d7de',\n  300: '#afb8c1',\n  400: '#8c959f',\n  500: '#6e7781',\n  600: '#57606a',\n  700: '#424a53',\n  800: '#32383f',\n  900: '#24292f',\n};\n\nconst StyledInputElement = styled('input')(\n  ({ theme }) => `\n  width: 100%;\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 12px;\n  border-radius: 12px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 4px 30px ${theme.palette.mode === 'dark' ? grey[900] : grey[200]};\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    outline: 3px solid ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n`,\n);\n\nconst StyledTextAreaElement = styled('textarea')(\n  ({ theme }) => `\n  width: 100%;\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 12px;\n  border-radius: 12px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 4px 30px ${theme.palette.mode === 'dark' ? grey[900] : grey[200]};\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    outline: 3px solid ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n`,\n);\n\nexport const Input = React.forwardRef(function CustomInput(\n  props: React.InputHTMLAttributes<HTMLInputElement>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  return (\n    <InputUnstyled components={{ Input: StyledInputElement }} {...props} ref={ref} />\n  );\n});\n\nexport const TextArea = function (props: any) {\n  return <StyledTextAreaElement {...props} />;\n};","import * as React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\n\nfunction MarkdownListItem(props: any) {\n  return <Box component=\"li\" sx={{ mt: 1, typography: 'body1' }} {...props} />;\n}\n\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h4',\n        component: 'h1',\n      },\n    },\n    h2: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'h6', component: 'h2' },\n    },\n    h3: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'subtitle1' },\n    },\n    h4: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'caption',\n        paragraph: true,\n      },\n    },\n    p: {\n      component: Typography,\n      props: { paragraph: true },\n    },\n    a: { component: Link },\n    li: {\n      component: MarkdownListItem,\n    },\n  },\n};\n\nexport default function Markdown(props: any) {\n  return <ReactMarkdown options={options} {...props} />;\n}","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport { CardMedia } from '@mui/material';\nimport Button from '@mui/material/Button';\n\nimport Markdown from './Markdown';\nimport { Comment, Question, User } from '../common/types';\nimport { Input } from './Input';\nimport { CommentsService } from '../services/CommentsService';\nimport { FavouritesService } from '../services/FavouritesService';\nimport { useAppSelector } from '../store/hooks';\nimport { useAppDispatch } from '../store/hooks';\nimport { fetchAllComments, fetchAllFavourite } from '../store/slices/questionSlice';\n\ninterface MainProps {\n  question: Question;\n  isMain?: boolean\n}\n\nfunction CommentForm({ id }: { id: string }) {\n  const dispatch = useAppDispatch()\n  const [comment, setCommet] = useState<string>('')\n\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    await CommentsService().create({\n      questionId: Number(id),\n      date: new Date(),\n      message: comment\n    })\n\n    dispatch(fetchAllComments(Number(id)))\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input style={{ width:\"100%\", marginTop: '20px' }} placeholder=\"Комментарий\" value={comment} onChange={({ target }) => setCommet(target.value)} />\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2, borderRadius:'10px', background:\"#0966aa\" }}>\n        Оставить комментарий\n      </Button>\n    </form>\n  )\n}\n\nfunction CommentItem({ item }: { item: Comment}) {\n  const datetime = (item.date as string)\n  const date = datetime.split('T')[0]\n  const time = datetime.split('T')[1].split('.')[0]\n\n  return (\n    <div style={{ \n      display: 'flex', \n      justifyContent:'space-between',\n      background: '#1315200d',\n      padding: '10px',\n      borderRadius: '10px',\n      marginBottom: '10px'\n    }}>\n      <div style={{ fontWeight: 'bold' }}>{item.user?.name}</div>\n      <div style={{ width: '50%' }}>{item.message}</div>\n      <div style={{ fontWeight: 'lighter' }}>{date} {time}</div>\n    </div>\n  )\n}\n\nexport default function Main({ question,isMain = false }: MainProps) {\n  const comments = useAppSelector((state) => state.question)\n  const userData = useAppSelector((state) => state.user.user) as User\n\n  const dispatch = useAppDispatch()\n  const params = useParams<{ id: string }>()\n\n  const addToFavourite = async () => {\n    await FavouritesService().create({\n      date: new Date(),\n      questionId: Number(params.id)\n    })\n    dispatch(fetchAllFavourite(Number(params.id)))\n  }\n\n  const deleteFromFavourite = async (id: number) => {\n    await FavouritesService().delete(id)\n    dispatch(fetchAllFavourite(Number(params.id)))\n  }\n\n  const isUserLikes = comments.favourites.find(({ user }) => user?.id == userData?.id)\n  const questionPhoto = question.photo?.split('itbotinterview.ru')[1] ? `https://itbotinterview.ru${question.photo?.split('itbotinterview.ru')[1]}` : ''\n  const likeText = !userData?.id ? 'Чтобы поставить отметку авторизуйся' : 'Нравится'\n\n  return (\n    <Grid item xs={12}md={8} sx={{ '& .markdown': { py: 3, }}}>\n      <Typography variant=\"h6\" gutterBottom fontWeight='bold'>\n        {question.title}\n      </Typography>\n      <div style={{ fontWeight:'lighter' }}>Нравится: {comments.favourites.length} пользователям</div>\n      <Divider />\n      { !isMain && (isUserLikes?.id ? \n        <Button disabled={!userData?.id} onClick={() => deleteFromFavourite(isUserLikes?.id as number)}>Удалить нравится</Button> : \n        <Button disabled={!userData?.id} onClick={addToFavourite}>{likeText}</Button>)\n      }\n      <Divider />\n      {questionPhoto && <CardMedia component=\"img\" image={questionPhoto} />}\n      <Markdown className=\"markdown\">\n        {question.describe}\n      </Markdown>\n      {isMain && (\n        <Button type=\"submit\" href={`/questions/${question?.id}`} fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2, borderRadius:'10px', background:\"#0966aa\"}}>\n          Перейти к вопросу\n        </Button>)\n      }\n      {userData?.id ? (!isMain && <CommentForm id={params.id as string}/>) : <div style={{ fontWeight:'lighter' }}>Чтобы оставить комментарий авторизуйся</div>}\n      {comments.comments.map(item => <CommentItem item={item} />)}\n    </Grid>\n  );\n}\n\n\n","import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\n\ninterface SidebarProps {\n  archives: ReadonlyArray<{\n    url: string;\n    title: string;\n  }>;\n  description: string;\n  title: string;\n}\n\nexport default function Sidebar(props: SidebarProps) {\n  const { archives, description, title } = props;\n\n  return (\n    <Grid item xs={12} md={4}>\n\n      <Paper elevation={0} sx={{ p: 2, bgcolor: '#1315200d',borderRadius:'20px' }}>\n        <Typography variant=\"h6\" gutterBottom fontWeight='bold'>\n          {title}\n        </Typography>\n        <Typography fontWeight={'lighter'}>{description}</Typography>\n      </Paper> \n      <Paper elevation={0} sx={{ padding: '10px', marginTop:'20px', bgcolor: '#1315200d',borderRadius:'20px' }}>\n        <Typography variant=\"h6\" gutterBottom fontWeight='bold'>\n          Наши площадки\n        </Typography>\n        {archives.map((archive) => (\n          <Link display=\"block\" variant=\"body1\" fontWeight='lighter' href={archive.url} key={archive.title}>\n            {archive.title}\n          </Link>\n        ))}\n      </Paper>\n    </Grid>\n  );\n}","export const sidebar = {\n    title: 'Что тут есть ?',\n    description: 'Тут ты можешь найти большое количество вопросов на совсем разные технологии. \\nТы можешь подготовиться к собеседованию и пройти импровезированное в боте собеседнике',\n    archives: [\n      { title: 'Бот IT собеседник', url: 'https://t.me/interviewITBot' },\n      { title: 'Джаваскриптезеры', url: 'https://t.me/jswrl' },\n      { title: 'Джаваскриптезеры YouTube', url: 'https://www.youtube.com/channel/UCPHIf4eGH-i5yox4MqI-fvw' },\n      { title: 'Питонисты', url: 'https://t.me/ptworl' },\n      { title: 'Связаться с нами', url: '/support' },\n    ],\n};\n\nexport const mainFeaturedPost = {\n  title: 'Ищи вопросы на собеседования быстро',\n  description: \"Не бойся проходить собеседования. Тут ты можешь найти все нужные вопросы на собеседования\",\n  image: '/code.jpeg',\n  imageText: 'main image description',\n  linkText: 'Наши ресурсы...',\n  linkURL: '/contact',\n\n};\n\nexport const placeholderImageUrl = 'https://www.vastas.com/wp-content/uploads/2019/12/placeholder.jpg'","import React, { useState,useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\n\nimport Sidebar from '../components/Sidebar';\nimport Main from '../components/Main';\n\nimport { QuestionService } from '../services/QuestionService';\nimport { Question, User } from '../common/types';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { fetchAllComments, fetchAllFavourite } from '../store/slices/questionSlice';\nimport { sidebar } from '../data';\nimport DocumentMeta from 'react-document-meta';\n\n\nexport default function Questions() {\n  const params = useParams<{ id: string }>()\n  const dispatch = useAppDispatch()\n  const [question, setQuestion] = useState<Question>()\n  const meta = useRef<any>({\n    title: 'Поиск',\n    description: 'Найди интересующий тебя вопрос',\n    meta: {\n      charset: 'utf-8',\n      name: {\n        keywords: 'react,meta,document,html,tags'\n      }\n    }\n  })\n\n  useEffect(() => {\n    QuestionService().getOne(Number(params.id))\n    .then((data) => setQuestion(data as Question))\n    \n    dispatch(fetchAllComments(Number(params.id)))\n    dispatch(fetchAllFavourite(Number(params.id)))\n  }, [])\n\n  useEffect(() => {\n    meta.current.title = question?.title\n    meta.current.description = question?.describe\n  }, [question])\n\n  return (\n        <DocumentMeta {...(meta.current)}>\n          <Grid container spacing={5} sx={{ mt: 3 }}>\n            {question && <Main question={question as Question} />}\n            <Sidebar\n              title={sidebar.title}\n              description={sidebar.description}\n              archives={sidebar.archives}\n            />\n          </Grid>\n        </DocumentMeta>\n  );\n}"],"names":["blue","grey","StyledInputElement","styled","theme","palette","mode","StyledTextAreaElement","Input","React","props","ref","components","TextArea","options","overrides","h1","component","Typography","gutterBottom","variant","h2","h3","h4","paragraph","p","a","Link","li","Box","sx","mt","typography","Markdown","CommentForm","id","dispatch","useAppDispatch","useState","comment","setCommet","onSubmit","event","preventDefault","CommentsService","create","questionId","Number","date","Date","message","fetchAllComments","I","style","width","marginTop","placeholder","value","onChange","target","Button","type","fullWidth","mb","borderRadius","background","CommentItem","item","datetime","split","time","display","justifyContent","padding","marginBottom","fontWeight","user","name","Main","question","isMain","comments","useAppSelector","state","userData","params","useParams","addToFavourite","FavouritesService","fetchAllFavourite","deleteFromFavourite","delete","isUserLikes","favourites","find","questionPhoto","photo","likeText","Grid","xs","md","py","title","length","Divider","disabled","onClick","CardMedia","image","className","describe","href","map","Sidebar","archives","description","elevation","bgcolor","archive","url","sidebar","mainFeaturedPost","imageText","linkText","linkURL","placeholderImageUrl","Questions","setQuestion","meta","useRef","charset","keywords","useEffect","QuestionService","getOne","then","data","current","container","spacing"],"sourceRoot":""}