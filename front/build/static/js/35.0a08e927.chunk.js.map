{"version":3,"file":"static/js/35.0a08e927.chunk.js","mappings":"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","sources":["components/Input.tsx","pages/support.tsx"],"sourcesContent":["import * as React from 'react';\nimport InputUnstyled from '@mui/base/InputUnstyled';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nimport { styled } from '@mui/system';\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#b6daff',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n};\n\nconst grey = {\n  50: '#f6f8fa',\n  100: '#eaeef2',\n  200: '#d0d7de',\n  300: '#afb8c1',\n  400: '#8c959f',\n  500: '#6e7781',\n  600: '#57606a',\n  700: '#424a53',\n  800: '#32383f',\n  900: '#24292f',\n};\n\nconst StyledInputElement = styled('input')(\n  ({ theme }) => `\n  width: 100%;\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 12px;\n  border-radius: 12px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 4px 30px ${theme.palette.mode === 'dark' ? grey[900] : grey[200]};\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    outline: 3px solid ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n`,\n);\n\nconst StyledTextAreaElement = styled('textarea')(\n  ({ theme }) => `\n  width: 100%;\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 12px;\n  border-radius: 12px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 4px 30px ${theme.palette.mode === 'dark' ? grey[900] : grey[200]};\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    outline: 3px solid ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n`,\n);\n\nexport const Input = React.forwardRef(function CustomInput(\n  props: React.InputHTMLAttributes<HTMLInputElement>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  return (\n    <InputUnstyled components={{ Input: StyledInputElement }} {...props} ref={ref} />\n  );\n});\n\nexport const TextArea = function (props: any) {\n  return <StyledTextAreaElement {...props} />;\n};","import React, { useState } from 'react';\n\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Input,TextArea } from '../components/Input';\nimport { Alert, Snackbar } from '@mui/material';\nimport { UserService } from '../services/UserService';\nimport DocumentMeta from 'react-document-meta';\n\nconst theme = createTheme();\n\nexport default function Support() {\n  const [ snackError, setSnackError ] = useState<boolean>(false)\n  const [ snackSuccess, setSnackSuccess ] = useState<boolean>(false)\n  const [ message, setMessage ] = useState<string>('')\n  const meta = {\n    title: 'Помощь',\n    description: 'Задай вопрос и получи ответ',\n    meta: {\n      charset: 'utf-8',\n      name: {\n        keywords: 'react,meta,document,html,tags'\n      }\n    }\n  };\n  const handleClose = (event: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackError(false);\n    setSnackSuccess(false);\n  };\n\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n        \n    const support =  await UserService().support({\n      email: data.get('email') as string,\n      telegram: data.get('telegram') as string,\n      phone: data.get('phone') as string,\n      title: data.get('title') as string,\n      describe: data.get('describe') as string\n    }) as { data: any, error?: string }\n\n    if(support.data) {\n      setMessage('Письмо отправлено')\n      setSnackSuccess(true)\n    }else {\n      setMessage(support?.error as string)\n      setSnackError(true)\n    }\n  };\n\n  return (\n    <DocumentMeta {...meta}>\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\" fontWeight='bold'>\n            Связаться с нами\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Input style={{ width:\"100%\" }} required type=\"email\"  placeholder='E-mail' name='email'/>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Input style={{ width:\"100%\" }} required type=\"phone\" placeholder='Номер телефона' name='phone'/>\n              </Grid>\n              <Grid item xs={12}>\n                <Input style={{ width:\"100%\" }} required type=\"name\" placeholder='Оглавление' name='title'/>\n              </Grid>\n              <Grid item xs={12}>\n                <TextArea style={{ width:\"100%\" }} required  placeholder='Описание' name='describe' />\n              </Grid>\n              <Grid item xs={12}>\n                <Input style={{ width:\"100%\" }} required type=\"text\" placeholder='Ваш телеграм' name='telegram'/>\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 1, mb: 1, borderRadius:'10px', background:\"#0966aa\" }}\n            >\n                Отправить\n            </Button>\n          </Box>\n        </Box>\n        <Snackbar open={snackError} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n            {message}\n          </Alert>\n        </Snackbar>\n        <Snackbar open={snackSuccess} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\n            {message}\n          </Alert>\n        </Snackbar>\n      </Container>\n    </ThemeProvider>\n    </DocumentMeta>\n  );\n}"],"names":["blue","grey","StyledInputElement","styled","theme","palette","mode","StyledTextAreaElement","Input","React","props","ref","components","TextArea","createTheme","Support","useState","snackError","setSnackError","snackSuccess","setSnackSuccess","message","setMessage","handleClose","event","reason","handleSubmit","preventDefault","data","FormData","currentTarget","UserService","support","email","get","telegram","phone","title","describe","error","description","meta","charset","name","keywords","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","variant","fontWeight","onSubmit","mt","container","spacing","item","xs","sm","I","style","width","required","type","placeholder","fullWidth","mb","borderRadius","background","open","autoHideDuration","onClose","severity"],"sourceRoot":""}