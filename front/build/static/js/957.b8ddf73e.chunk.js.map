{"version":3,"file":"static/js/957.b8ddf73e.chunk.js","mappings":"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","sources":["components/Input.tsx","pages/signin.tsx"],"sourcesContent":["import * as React from 'react';\nimport InputUnstyled from '@mui/base/InputUnstyled';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nimport { styled } from '@mui/system';\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#b6daff',\n  400: '#3399FF',\n  500: '#007FFF',\n  600: '#0072E5',\n};\n\nconst grey = {\n  50: '#f6f8fa',\n  100: '#eaeef2',\n  200: '#d0d7de',\n  300: '#afb8c1',\n  400: '#8c959f',\n  500: '#6e7781',\n  600: '#57606a',\n  700: '#424a53',\n  800: '#32383f',\n  900: '#24292f',\n};\n\nconst StyledInputElement = styled('input')(\n  ({ theme }) => `\n  width: 100%;\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 12px;\n  border-radius: 12px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 4px 30px ${theme.palette.mode === 'dark' ? grey[900] : grey[200]};\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    outline: 3px solid ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n`,\n);\n\nconst StyledTextAreaElement = styled('textarea')(\n  ({ theme }) => `\n  width: 100%;\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 12px;\n  border-radius: 12px;\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\n  box-shadow: 0px 4px 30px ${theme.palette.mode === 'dark' ? grey[900] : grey[200]};\n\n  &:hover {\n    border-color: ${blue[400]};\n  }\n\n  &:focus {\n    border-color: ${blue[400]};\n    outline: 3px solid ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};\n  }\n`,\n);\n\nexport const Input = React.forwardRef(function CustomInput(\n  props: React.InputHTMLAttributes<HTMLInputElement>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  return (\n    <InputUnstyled components={{ Input: StyledInputElement }} {...props} ref={ref} />\n  );\n});\n\nexport const TextArea = function (props: any) {\n  return <StyledTextAreaElement {...props} />;\n};","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Snackbar from '@mui/material/Snackbar';\n\nimport { Input } from '../components/Input';\nimport { AuthService } from '../services/AuthService';\nimport { Alert, IconButton } from '@mui/material';\nimport DocumentMeta from 'react-document-meta';\n\nconst theme = createTheme();\n\nexport default function Signin() {\n  const [ snack, setSnack ] = useState<boolean>(false)\n  const [ error, setError ] = useState<string>('')\n\n  const navigate = useNavigate()\n  const meta = {\n    title: 'Вход',\n    description: 'Войди в свой аккаунт и создай свой вопрос на собеседование.',\n    meta: {\n      charset: 'utf-8',\n      name: {\n        keywords: 'react,meta,document,html,tags'\n      }\n    }\n  };\n\n  const handleClose = (event: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnack(false);\n  };\n\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const user = await AuthService().signin({\n      email: data.get('email') as string,\n      password: data.get('password') as string,\n    }) as { data: any, error?: string }\n\n    if(user.data) {\n      navigate('/profile')\n    }else {\n      setError(user?.error as string)\n      setSnack(true)\n    }\n  };\n\n  return (\n    <DocumentMeta {...meta}>\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\" fontWeight='bold'>\n            Войти\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Input style={{ width:\"100%\" }} type=\"email\" required name=\"email\" placeholder='E-mail'/>\n              </Grid>\n              <Grid item xs={12}>\n                <Input style={{ width:\"100%\" }} type=\"password\" required name=\"password\" placeholder='Пароль'/>\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, borderRadius:'10px', background:\"#0966aa\" }}\n            >\n              Войти\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"signup\" variant=\"body2\">\n                  Зарегистрироваться\n                </Link>\n                <Link href=\"forget\" variant=\"body2\" style={{ marginLeft: 5}}>\n                  Забыли пароль ?\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Snackbar open={snack} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n            {error}\n          </Alert>\n        </Snackbar>\n      </Container>\n    </ThemeProvider>\n    </DocumentMeta>\n  );\n}"],"names":["blue","grey","StyledInputElement","styled","theme","palette","mode","StyledTextAreaElement","Input","React","props","ref","components","TextArea","createTheme","Signin","useState","snack","setSnack","error","setError","navigate","useNavigate","handleClose","event","reason","handleSubmit","preventDefault","data","FormData","currentTarget","AuthService","signin","email","get","password","user","title","description","meta","charset","name","keywords","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","variant","fontWeight","onSubmit","mt","container","spacing","item","xs","I","style","width","type","required","placeholder","fullWidth","mb","borderRadius","background","justifyContent","href","marginLeft","open","autoHideDuration","onClose","severity"],"sourceRoot":""}